// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider                         = "zod-prisma-types"
  createOptionalDefaultValuesTypes = true
  useTypeAssertions                = true
  createInputTypes                 = false
  createRelationValuesTypes        = true
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Group {
  id String @id @default(uuid())

  ownerId    String
  groupOwner User   @relation("mygroup", fields: [ownerId], references: [id], onDelete: Cascade)
  userArray  User[]
}

model User {
  id           String  @id @default(uuid())
  name         String  @default("")
  ACCESS_TOKEN String?
  PUBLIC_TOKEN String?
  ITEM_ID      String?
  TRANSFER_ID  String? // The transfer_id is only relevant for Transfer ACH product.
  PAYMENT_ID   String? // The payment_id is only relevant for the UK/EU Payment Initiation product.

  ownedTxArray Tx[] //transactions I own
  splitTxArray Split[] @relation("splitUserArray") //transactions I am included in

  myGroup    Group[] @relation("mygroup") //groups I own
  groupArray Group[] //array of groups this user is included in

  CatSettings CatSettings[]
}

model Tx {
  id      String @id @default(cuid())
  plaidId String //plaid tx_id

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  catArray Cat[]

  splitArray Split[]
}

model Split {
  id String @id @default(uuid())

  userId String
  user   User   @relation("splitUserArray", fields: [userId], references: [id], onDelete: Cascade)

  amount Float

  txId String
  tx   Tx     @relation(fields: [txId], references: [id], onDelete: Cascade)
}

model Cat {
  id        String   @id @default(uuid())
  name      String
  nameArray String[]
  amount    Float

  tx   Tx     @relation(fields: [txId], references: [id])
  txId String
}

model CatSettings {
  id     String @id @default(uuid())
  name   String
  budget Float

  parent   CatSettings?  @relation("SubCategory", fields: [parentId], references: [id])
  parentId String?
  children CatSettings[] @relation("SubCategory")

  User   User   @relation(fields: [userId], references: [id])
  userId String
}
